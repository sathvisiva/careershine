{"version":3,"sources":["../../../client/components/util/util.service.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,CAAC,YAAW;;;;;AAKV,WAAS,WAAW,CAAC,OAAO,EAAE;AAC5B,QAAI,IAAI,GAAG;;;;;;;AAOT,YAAM,EAAA,gBAAC,EAAE,EAAE;AACT,eAAO,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC;OACnD;;;;;;;;AAQD,cAAQ,EAAA,kBAAC,GAAG,EAAE;AACZ,YAAI,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACpC,SAAC,CAAC,IAAI,GAAG,GAAG,CAAC;;;AAGb,YAAI,CAAC,CAAC,IAAI,KAAK,EAAE,EAAE;AACjB,WAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;SACjB;;AAED,eAAO,CAAC,CAAC;OACV;;;;;;;;;AASD,kBAAY,EAAA,sBAAC,GAAG,EAAE,OAAO,EAAE;AACzB,WAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACzB,eAAO,GAAG,OAAO,IAAI,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AAC9C,eAAO,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,eAAO,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,eAAO,GAAG,OAAO,CAAC,MAAM,CAAC,UAAS,CAAC,EAAE;AACnC,cAAI,aAAa,GAAG,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC;AAChD,cAAI,aAAa,GAAG,GAAG,CAAC,QAAQ,KAAK,CAAC,CAAC,QAAQ,CAAC;;;;;AAKhD,cAAI,SAAS,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,IAAI,GAAG,CAC9E,IAAI,KAAK,KAAK,CAAA,AAAC,CAAC;AACnB,iBAAO,aAAa,IAAI,aAAa,IAAI,SAAS,CAAC;SACpD,CAAC,CAAC;AACH,eAAO,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;OAC5B;KACF,CAAC;;AAEF,WAAO,IAAI,CAAC;GACb;;AAED,SAAO,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAClC,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;CACjC,CAAA,EAAG,CAAC","file":"util.service.js","sourcesContent":["'use strict';\n\n(function() {\n\n  /**\n   * The Util service is for thin, globally reusable, utility functions\n   */\n  function UtilService($window) {\n    var Util = {\n      /**\n       * Return a callback or noop function\n       *\n       * @param  {Function|*} cb - a 'potential' function\n       * @return {Function}\n       */\n      safeCb(cb) {\n        return angular.isFunction(cb) ? cb : angular.noop;\n      },\n\n      /**\n       * Parse a given url with the use of an anchor element\n       *\n       * @param  {String} url - the url to parse\n       * @return {Object}     - the parsed url, anchor element\n       */\n      urlParse(url) {\n        var a = document.createElement('a');\n        a.href = url;\n\n        // Special treatment for IE, see http://stackoverflow.com/a/13405933 for details\n        if (a.host === '') {\n          a.href = a.href;\n        }\n\n        return a;\n      },\n\n      /**\n       * Test whether or not a given url is same origin\n       *\n       * @param  {String}           url       - url to test\n       * @param  {String|String[]}  [origins] - additional origins to test against\n       * @return {Boolean}                    - true if url is same origin\n       */\n      isSameOrigin(url, origins) {\n        url = Util.urlParse(url);\n        origins = origins && [].concat(origins) || [];\n        origins = origins.map(Util.urlParse);\n        origins.push($window.location);\n        origins = origins.filter(function(o) {\n          let hostnameCheck = url.hostname === o.hostname;\n          let protocolCheck = url.protocol === o.protocol;\n          // 2nd part of the special treatment for IE fix (see above): \n          // This part is when using well-known ports 80 or 443 with IE,\n          // when $window.location.port==='' instead of the real port number.\n          // Probably the same cause as this IE bug: https://goo.gl/J9hRta\n          let portCheck = url.port === o.port || o.port === '' && (url.port === '80' || url\n            .port === '443');\n          return hostnameCheck && protocolCheck && portCheck;\n        });\n        return origins.length >= 1;\n      }\n    };\n\n    return Util;\n  }\n\n  angular.module('careershineApp.util')\n    .factory('Util', UtilService);\n})();\n"]}